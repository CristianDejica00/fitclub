{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\n\nvar Checkbox = function (_PureComponent) {\n  _inherits(Checkbox, _PureComponent);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox() {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      checked: _this.props.checked\n    };\n\n    _this.handleToggleChecked = function () {\n      var label = _this.props.label;\n      var checked = !_this.state.checked;\n\n      _this.setState({\n        checked: checked\n      });\n\n      _this.props.onChange && _this.props.onChange({\n        label: label,\n        checked: checked\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.setState({\n        checked: this.props.checked\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var checked = this.state.checked;\n      var _this$props = this.props,\n          labelBefore = _this$props.labelBefore,\n          containerStyle = _this$props.containerStyle,\n          checkedComponent = _this$props.checkedComponent,\n          uncheckedComponent = _this$props.uncheckedComponent,\n          checkedImage = _this$props.checkedImage,\n          uncheckedImage = _this$props.uncheckedImage,\n          checkboxStyle = _this$props.checkboxStyle,\n          labelStyle = _this$props.labelStyle,\n          numberOfLabelLines = _this$props.numberOfLabelLines,\n          label = _this$props.label,\n          noFeedback = _this$props.noFeedback,\n          customLabel = _this$props.customLabel,\n          disabled = _this$props.disabled;\n      var Container = noFeedback ? TouchableWithoutFeedback : Checkbox.Container;\n      return React.createElement(Container, {\n        style: [styles.container, containerStyle],\n        onPress: this.handleToggleChecked,\n        disabled: disabled\n      }, React.createElement(View, {\n        style: [styles.container, containerStyle]\n      }, labelBefore ? React.createElement(Label, {\n        labelStyle: labelStyle,\n        numberOfLabelLines: numberOfLabelLines,\n        label: label,\n        customLabel: customLabel\n      }) : null, checkedComponent && uncheckedComponent ? checked ? checkedComponent : uncheckedComponent : React.createElement(Image, {\n        style: [styles.checkbox, checkboxStyle],\n        source: checked ? checkedImage : uncheckedImage\n      }), !labelBefore && React.createElement(Label, {\n        labelStyle: labelStyle,\n        numberOfLabelLines: numberOfLabelLines,\n        label: label,\n        customLabel: customLabel\n      })));\n    }\n  }]);\n\n  return Checkbox;\n}(PureComponent);\n\nCheckbox.Container = Platform.OS === 'ios' ? TouchableOpacity : TouchableNativeFeedback;\nCheckbox.defaultProps = {\n  custom: false,\n  label: 'Label',\n  customLabel: null,\n  numberOfLabelLines: 1,\n  labelBefore: false,\n  checked: false,\n  checkedImage: require(\"./checked.png\"),\n  uncheckedImage: require(\"./unchecked.png\"),\n  checkedComponent: null,\n  uncheckedComponent: null,\n  noFeedback: false,\n  disabled: false\n};\nCheckbox.propTypes = {\n  checkedComponent: PropTypes.element,\n  uncheckedComponent: PropTypes.element,\n  checked: PropTypes.bool,\n  checkboxStyle: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  containerStyle: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  label: PropTypes.string,\n  customLabel: PropTypes.element,\n  labelBefore: PropTypes.bool,\n  labelStyle: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  numberOfLabelLines: PropTypes.number,\n  onChange: PropTypes.func,\n  noFeedback: PropTypes.bool,\n  disabled: PropTypes.bool\n};\n\nvar Label = function Label(_ref) {\n  var labelStyle = _ref.labelStyle,\n      numberOfLabelLines = _ref.numberOfLabelLines,\n      label = _ref.label,\n      customLabel = _ref.customLabel;\n  return !customLabel ? React.createElement(View, {\n    style: styles.labelContainer\n  }, React.createElement(Text, {\n    style: [styles.label, labelStyle],\n    numberOfLines: numberOfLabelLines\n  }, label)) : customLabel;\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  checkbox: {\n    width: 30,\n    height: 30\n  },\n  labelContainer: {\n    marginLeft: 10,\n    marginRight: 10\n  },\n  label: {\n    fontSize: 16,\n    color: '#222'\n  }\n});\nexport default Checkbox;","map":{"version":3,"sources":["D:/Gym project/fitclub/node_modules/react-native-modest-checkbox/index.js"],"names":["React","PureComponent","PropTypes","Checkbox","state","checked","props","handleToggleChecked","label","setState","onChange","prevProps","prevState","labelBefore","containerStyle","checkedComponent","uncheckedComponent","checkedImage","uncheckedImage","checkboxStyle","labelStyle","numberOfLabelLines","noFeedback","customLabel","disabled","Container","TouchableWithoutFeedback","styles","container","checkbox","Platform","OS","TouchableOpacity","TouchableNativeFeedback","defaultProps","custom","require","propTypes","element","bool","oneOfType","array","object","string","number","func","Label","labelContainer","StyleSheet","create","flexDirection","alignItems","width","height","marginLeft","marginRight","fontSize","color"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { TouchableOpacity, View, Text, StyleSheet, Image, Platform, TouchableNativeFeedback, TouchableWithoutFeedback } from 'react-native'\n\nclass Checkbox extends PureComponent {\n  state = {\n    checked: this.props.checked\n  }\n\n  static Container = Platform.OS === 'ios' ? TouchableOpacity : TouchableNativeFeedback\n\n  static defaultProps = {\n    custom: false,\n    label: 'Label',\n    customLabel: null,\n    numberOfLabelLines: 1,\n    labelBefore: false,\n    checked: false,\n    checkedImage: require('./checked.png'),\n    uncheckedImage: require('./unchecked.png'),\n    checkedComponent: null,\n    uncheckedComponent: null,\n    noFeedback: false,\n    disabled: false\n  }\n\n  static propTypes = {\n    checkedComponent: PropTypes.element,\n    uncheckedComponent: PropTypes.element,\n    checked: PropTypes.bool,\n    checkboxStyle: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    containerStyle: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    label: PropTypes.string,\n    customLabel: PropTypes.element,\n    labelBefore: PropTypes.bool,\n    labelStyle: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    numberOfLabelLines: PropTypes.number,\n    onChange: PropTypes.func,\n    noFeedback: PropTypes.bool,\n    disabled: PropTypes.bool\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    this.setState({ checked: this.props.checked })\n  }\n\n  render () {\n    const { checked } = this.state\n    const {\n      labelBefore,\n      containerStyle,\n      checkedComponent,\n      uncheckedComponent,\n      checkedImage,\n      uncheckedImage,\n      checkboxStyle,\n      labelStyle,\n      numberOfLabelLines,\n      label,\n      noFeedback,\n      customLabel,\n      disabled\n    } = this.props\n\n    const Container = noFeedback ? TouchableWithoutFeedback : Checkbox.Container\n\n    return (\n      <Container\n        style={[styles.container, containerStyle]}\n        onPress={this.handleToggleChecked}\n        disabled={disabled}\n      >\n        <View style={[styles.container, containerStyle]}>\n          {labelBefore ? (\n            <Label\n              labelStyle={labelStyle}\n              numberOfLabelLines={numberOfLabelLines}\n              label={label}\n              customLabel={customLabel}\n            />\n          ) : null}\n\n          {checkedComponent && uncheckedComponent ? (\n            checked ? (\n              checkedComponent\n            ) : (\n              uncheckedComponent\n            )\n          ) : (\n            <Image\n              style={[styles.checkbox, checkboxStyle]}\n              source={checked ? checkedImage : uncheckedImage}\n            />\n          )}\n\n          {!labelBefore && (\n            <Label\n              labelStyle={labelStyle}\n              numberOfLabelLines={numberOfLabelLines}\n              label={label}\n              customLabel={customLabel}\n            />\n          )}\n\n        </View>\n\n      </Container>\n    )\n  }\n\n  handleToggleChecked = () => {\n    const { label } = this.props\n    const checked = !this.state.checked\n\n    this.setState({ checked })\n    this.props.onChange && this.props.onChange({ label, checked })\n  }\n}\n\nconst Label = ({ labelStyle, numberOfLabelLines, label, customLabel }) => {\n  return !customLabel ? (\n    <View style={styles.labelContainer}>\n      <Text style={[styles.label, labelStyle]} numberOfLines={numberOfLabelLines}>\n        {label}\n      </Text>\n    </View>\n  ) : customLabel\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  checkbox: {\n    width: 30,\n    height: 30\n  },\n  labelContainer: {\n    marginLeft: 10,\n    marginRight: 10\n  },\n  label: {\n    fontSize: 16,\n    color: '#222'\n  }\n})\n\nexport default Checkbox\n"]},"metadata":{},"sourceType":"module"}