{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Icon } from \"react-native-web/dist/index\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Svg, Path } from 'react-native-svg';\nimport Checkbox from 'react-native-modest-checkbox';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function HomeScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoaded = _useState2[0],\n      setIsLoaded = _useState2[1];\n\n  var getData = function getData() {\n    var data;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@authTokenDefault\"));\n\n          case 3:\n            data = _context.sent;\n\n            if (!(data !== null)) {\n              _context.next = 8;\n              break;\n            }\n\n            console.log(\"asd\");\n            setIsLoaded(true);\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.homeScreen\n  }, React.createElement(StatusBar, null), isLoaded ? React.createElement(SafeAreaView, {\n    style: styles.safearea\n  }, React.createElement(Text, null, \"You're not home\")) : React.createElement(SafeAreaView, {\n    style: styles.safearea\n  }, React.createElement(Text, null, \"You're home\")));\n}\nvar styles = StyleSheet.create({\n  homeScreen: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["D:/Gym project/fitclub/screens/Home.js"],"names":["StatusBar","React","useState","Icon","SafeAreaView","Svg","Path","Checkbox","AsyncStorage","HomeScreen","isLoaded","setIsLoaded","getData","getItem","data","console","log","styles","homeScreen","safearea","StyleSheet","create","flex"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;SACqEC,I;AACrE,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,kBAA1B;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,eAAe,SAASC,UAAT,GAAsB;AAEjC,kBAAgCP,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEOJ,YAAY,CAACK,OAAb,CAAqB,mBAArB,CAFP;;AAAA;AAENC,YAAAA,IAFM;;AAAA,kBAGRA,IAAI,KAAK,IAHD;AAAA;AAAA;AAAA;;AAIRC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAL,YAAAA,WAAW,CAAC,IAAD,CAAX;AALQ,6CAMDG,IANC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASVC,YAAAA,OAAO,CAACC,GAAR;;AATU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAeF,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACI,oBAAC,SAAD,OADJ,EAEMR,QAAQ,GACV,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEO,MAAM,CAACE;AAA5B,KACE,oBAAC,IAAD,0BADF,CADU,GAKV,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,MAAM,CAACE;AAA5B,KACE,oBAAC,IAAD,sBADF,CAPJ,CADF;AAcD;AAED,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,UAAU,EAAE;AACRI,IAAAA,IAAI,EAAC;AADG;AADiB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, TextInput, Icon } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Svg, Path } from 'react-native-svg';\r\n//import CheckBox from '@react-native-community/checkbox';\r\nimport Checkbox from 'react-native-modest-checkbox';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nexport default function HomeScreen() {\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    const getData = async () => {\r\n    try {\r\n        const data = await AsyncStorage.getItem(\"@authTokenDefault\");\r\n        if (data !== null) {\r\n            console.log(\"asd\");\r\n            setIsLoaded(true);\r\n            return data;\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n    };\r\n\r\n    \r\n\r\n  return (\r\n    <View style={styles.homeScreen}>\r\n        <StatusBar/>\r\n        { isLoaded ? \r\n        <SafeAreaView style={styles.safearea}>\r\n          <Text>You're not home</Text>\r\n        </SafeAreaView> \r\n        : \r\n        <SafeAreaView style={styles.safearea}>\r\n          <Text>You're home</Text>\r\n        </SafeAreaView>\r\n        }\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    homeScreen: {\r\n        flex:1\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}